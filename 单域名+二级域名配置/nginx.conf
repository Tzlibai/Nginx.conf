
user  nginx;
worker_processes  1;
 
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
 
 
events {
	# 最大连接数
    worker_connections  1024;
}
 
 
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
	# 用来设置日志格式；
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
 	# 用来指定日志文件的存放路径、格式
    access_log  /var/log/nginx/access.log  main;
 	# 指定是否使用sendfile系统调用来传输文件。
    sendfile        on;
    #tcp_nopush     on;
 
    keepalive_timeout  65;
 
    #gzip  on;
 
    upstream appointment {
        # 请将xxx.xxx.xxx.xxx:8081 更换称自己的IP地址
        server xxx.xxx.xxx.xxx:8081 weight=1 max_fails=2 fail_timeout=20; 
    }
 
    server {
        listen 80;
		# 注意这里域名改写成自己的域名!!!
		server_name www.域名.com;
		# http请求时直接重定向到https
    	rewrite ^(.*)$ https://${server_name}$1 permanent; 
		root /usr/share/nginx/html;
		index index.html index.htm;
        location / {
        }
    }
	
	# Settings for a TLS enabled server.
#
    server {
        listen       443 ssl;
        listen       [::]:443 ssl;
        server_name  localhost;
	 ssl on;

        # root 根目录配置,这里设置的是 location/ 匹配访问路径的上一层目录,可根据需要重新配置
		root /usr/share/nginx/html;
		index index.html index.htm;

		#证书文件名称 注意证书的放置位置
        ssl_certificate cert/a.crt;
        #私钥文件名称
        ssl_certificate_key cert/a.key;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  5m;
	ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

		location / {
        }
        
		
        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
	
 
    server {
		# 二级域名的SSL配置
        listen       443 ssl;
		# 注意这里域名改写成自己的域名!!!
        server_name  api.域名.com;
	 ssl on;
        
		
		#证书文件名称 注意证书的放置位置
        ssl_certificate cert/api.crt;
        #私钥文件名称
        ssl_certificate_key cert/api.key;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  5m;
	ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

		

		location / {
		# 注意这里改写成自己的域名!!!
		# 把8100端口映射到二级域名下，完成二级域名HTTPS
		proxy_pass http://www.域名.com:8100;

		 proxy_set_header Host $host;
        # 获取请求的ip地址
        proxy_set_header X-real-ip $remote_addr;
        # 获取请求的多级ip地址，当请求经过多个反向代理时，会获取多个ip，英文逗号隔开

        }
        
		root /usr/share/nginx/html;
		index index.html index.htm;
		
        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
	
	
	server {
	# 配置8100端口,用于二级域名使用
        listen       8100 default_server;
        listen       [::]:8100 default_server;
        server_name  _;
		
       # root 根目录配置,这里设置的是端口8100 location/ 匹配访问路径的上一层目录,可根据需要重新配置
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
 
 
    include /etc/nginx/conf.d/*.conf;
}